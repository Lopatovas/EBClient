{"version":3,"sources":["components/libraryCard/index.js","containers/Home/index.js","components/formWrapper/index.js","components/input/index.js","containers/Register/index.js","containers/Login/index.js","containers/BookDetails/index.js","config/navRoutes.js","components/navBar/index.js","components/bookCard/index.js","containers/Library/index.js","containers/UserDetails/index.js","containers/Message/index.js","layout/NavLayout.js","App.js","serviceWorker.js","index.js"],"names":["LibraryCard","props","cardHeader","cardDescription","buttonTitle","id","className","to","defaultProps","Home","state","loggedIn","handleLogOut","bind","this","setState","localStorage","getItem","removeItem","history","push","React","Component","FormWrapper","children","callBack","submitText","onClick","e","preventDefault","handleSubmit","type","Input","labelText","htmlFor","Register","submitForm","placeholder","Login","setItem","BookDetails","navBarRoutes","user","name","url","logout","action","getNavLoggedInUser","getNavLoggedOut","NavBar","routes","map","route","i","key","href","BookCard","title","description","facts","src","alt","fact","Library","SIGNED_IN","DEFAULT","UserDetails","Message","NavLayout","storage","getNavigation","withRouter","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7f294e44.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction LibraryCard(props) {\n  const {\n    cardHeader, cardDescription, buttonTitle, id,\n  } = props;\n  return (\n    <div className=\"shadow-lg p-3 bg-white rounded card mb-2\">\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{cardHeader}</h5>\n        <p className=\"card-text\">{cardDescription}</p>\n        <Link className=\"btn btn-light\" to={`/EBClient/Library/${id}`}>{buttonTitle}</Link>\n      </div>\n    </div>\n  );\n}\n\nLibraryCard.propTypes = {\n  cardHeader: PropTypes.string,\n  cardDescription: PropTypes.string,\n  buttonTitle: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\nLibraryCard.defaultProps = {\n  cardHeader: '',\n  cardDescription: '',\n  buttonTitle: '',\n};\n\nexport default LibraryCard;\n","import React from 'react';\n\nimport LibraryCard from '../../components/libraryCard';\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedIn: false };\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loggedIn: localStorage.getItem('isUser') });\n  }\n\n  handleLogOut() {\n    localStorage.removeItem('isUser');\n    const { history } = this.props;\n    history.push('/EBClient/Login');\n  }\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <LibraryCard\n          cardHeader=\"Amazing library v1.0\"\n          cardDescription=\"Best ever\"\n          buttonTitle=\"Lego\"\n          id=\"1\"\n        />\n        <LibraryCard\n          cardHeader=\"Amazing library v2.0\"\n          cardDescription=\"Best ever\"\n          buttonTitle=\"Lego\"\n          id=\"2\"\n        />\n        <LibraryCard\n          cardHeader=\"Amazing library v3.0\"\n          cardDescription=\"Best ever\"\n          buttonTitle=\"Lego\"\n          id=\"3\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction FormWrapper(props) {\n  const { children, callBack, submitText } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    callBack();\n  };\n  return (\n    <form className=\"shadow-lg p-3 mb-5 bg-white rounded\">\n      {children}\n      <button onClick={(e) => { handleSubmit(e); }} type=\"button\" className=\"btn btn-light\">\n        {submitText}\n      </button>\n    </form>\n  );\n}\n\nFormWrapper.propTypes = {\n  children: PropTypes.arrayOf(PropTypes.object),\n  submitText: PropTypes.string,\n  callBack: PropTypes.func.isRequired,\n};\n\nFormWrapper.defaultProps = {\n  children: [],\n  submitText: 'Submit',\n};\n\nexport default FormWrapper;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Input(props) {\n  const {\n    labelText, id, children,\n  } = props;\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={id}>{labelText}</label>\n      {children}\n    </div>\n  );\n}\n\nInput.propTypes = {\n  labelText: PropTypes.string,\n  id: PropTypes.string,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nInput.defaultProps = {\n  labelText: '',\n  id: '',\n\n};\n\nexport default Input;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormWrapper from '../../components/formWrapper';\nimport Input from '../../components/input';\n\nclass Register extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {};\n  }\n\n  submitForm() {\n    const { history } = this.props;\n    history.push('/EBClient/Login');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <FormWrapper callBack={this.submitForm}>\n          <Input labelText=\"Name\" id=\"nameField\">\n            <input type=\"text\" className=\"form-control\" id=\"nameField\" placeholder=\"Bob\" />\n          </Input>\n          <Input labelText=\"Email\" id=\"emailField\">\n            <input type=\"email\" className=\"form-control\" id=\"emailField\" placeholder=\"name@example.com\" />\n          </Input>\n          <Input labelText=\"Password\" id=\"passwordField\">\n            <input type=\"password\" className=\"form-control\" id=\"passwordField\" placeholder=\"\" />\n          </Input>\n        </FormWrapper>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default Register;\n","/* eslint-disable react/forbid-prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FormWrapper from '../../components/formWrapper';\nimport Input from '../../components/input';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.submitForm = this.submitForm.bind(this);\n    this.state = {};\n  }\n\n  submitForm() {\n    const { history } = this.props;\n    localStorage.setItem('isUser', 'yes');\n    history.push('/EBClient/');\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <FormWrapper callBack={this.submitForm}>\n          <Input labelText=\"Email\" id=\"emailField\">\n            <input type=\"email\" className=\"form-control\" id=\"emailField\" placeholder=\"name@example.com\" />\n          </Input>\n          <Input labelText=\"Password\" id=\"passwordField\">\n            <input type=\"password\" className=\"form-control\" id=\"passwordField\" placeholder=\"\" />\n          </Input>\n        </FormWrapper>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  history: PropTypes.object.isRequired,\n};\n\nexport default Login;\n","import React from 'react';\n\nclass BookDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <div>In BookDetails</div>\n      </div>\n    );\n  }\n}\n\nexport default BookDetails;\n","/* eslint-disable class-methods-use-this */\nclass navBarRoutes {\n  constructor(user) {\n    this.user = user;\n  }\n\n  getNavLoggedOut() {\n    return [\n      { name: 'Home', url: '/EBClient/' },\n      { name: 'Register', url: '/EBClient/Register' },\n      { name: 'Login', url: '/EBClient/Login' },\n    ];\n  }\n\n  getNavLoggedInUser(logout) {\n    return [\n      { name: 'Home', url: '/EBClient/' },\n      {\n        name: 'Log Out',\n        url: '/EBClient/',\n        action: () => {\n          logout();\n        },\n      },\n      {\n        name: 'My Account',\n        url: `/EBClient/User/${this.user.id}`,\n      },\n    ];\n  }\n\n  getNavigation(logout = () => {}) {\n    if (this.user) {\n      return this.getNavLoggedInUser(logout);\n    }\n\n    return this.getNavLoggedOut();\n  }\n}\n\nexport default navBarRoutes;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nfunction NavBar(props) {\n  const { routes } = props;\n  return (\n    <div className=\"shadow-sm mb-5 bg-white rounded\">\n      <ul className=\"nav flex-row justify-content-center\">\n        {routes.map((route, i) => (\n          <li className=\"nav-item\" key={i}>\n            {route.action ? <a className=\"nav-link\" href=\"/\" onClick={(e) => { e.preventDefault(); route.action(e); }}>Log out</a> : <Link className=\"nav-link\" to={route.url}>{route.name}</Link>}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nNavBar.propTypes = {\n  routes: PropTypes.arrayOf(PropTypes.object),\n};\n\nNavBar.defaultProps = {\n  routes: [],\n};\n\nexport default NavBar;\n","// eslint-disable-next-line react/no-array-index-key\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nfunction BookCard(props) {\n  const {\n    title, description, facts, buttonTitle, id,\n  } = props;\n  return (\n    <div className=\"flex-fill shadow-lg p-3 bg-white rounded card m-2\">\n      <img src=\"https://thumbs-prod.si-cdn.com/T_txo7Wkgu6aPjd6a8thp1kDL2s=/420x240/https://public-media.si-cdn.com/filer/91/91/91910c23-cae4-46f8-b7c9-e2b22b8c1710/lostbook.jpg\" className=\"card-img-top\" alt=\"...\" />\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{title}</h5>\n        <p className=\"card-text\">{description}</p>\n      </div>\n      <ul className=\"list-group list-group-flush\">\n        {facts.map((fact, i) => (<li className=\"list-group-item\" key={i}>{fact}</li>))}\n      </ul>\n      <div className=\"card-body\">\n        <Link className=\"btn btn-light\" to={`/EBClient/Book/${id}`}>{buttonTitle}</Link>\n      </div>\n    </div>\n  );\n}\n\nBookCard.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  facts: PropTypes.arrayOf(PropTypes.object),\n  buttonTitle: PropTypes.string,\n  id: PropTypes.string.isRequired,\n};\n\nBookCard.defaultProps = {\n  title: '',\n  description: '',\n  facts: [],\n  buttonTitle: '',\n};\n\nexport default BookCard;\n","import React from 'react';\nimport navBarRoutes from '../../config/navRoutes';\n\nimport NavBar from '../../components/navBar';\nimport BookCard from '../../components/bookCard';\n\nclass Library extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        {localStorage.getItem('isUser') ? <NavBar routes={navBarRoutes.SIGNED_IN} /> : <NavBar routes={navBarRoutes.DEFAULT} />}\n        <div className=\"container d-flex\">\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.1\"\n            description=\"Yeah, pretty good\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n          <BookCard\n            id=\"5\"\n            title=\"The book of Amazing vol.2\"\n            description=\"vol.1 was better...\"\n            buttonTitle=\"Let's check it out!\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Library;\n","import React from 'react';\n\nclass UserDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  handleSubmit() {\n    const { history } = this.props;\n    history.push(`/EBClient/Message/${'2'}}`);\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <button onClick={(e) => { this.handleSubmit(e); }} type=\"button\" className=\"btn btn-light\">\n          Send message\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default UserDetails;\n","import React from 'react';\n\nclass Message extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <div>In Message page</div>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","/* eslint-disable react/no-did-update-set-state */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport navBarRoutes from '../config/navRoutes';\n\nimport NavBar from '../components/navBar';\n\nclass NavLayout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedIn: false };\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ loggedIn: localStorage.getItem('isUser') });\n  }\n\n  componentDidUpdate() {\n    const { loggedIn } = this.state;\n    const storage = localStorage.getItem('isUser');\n    if (storage !== loggedIn) {\n      this.setState({ loggedIn: storage });\n    }\n  }\n\n  handleLogOut() {\n    localStorage.removeItem('isUser');\n    const { history } = this.props;\n    history.push('/EBClient/Login');\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <NavBar routes={new navBarRoutes(this.state.loggedIn).getNavigation(this.handleLogOut)} />\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default withRouter(NavLayout);\n","import React from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport Home from './containers/Home';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\nimport BookDetails from './containers/BookDetails';\nimport Library from './containers/Library';\nimport UserDetails from './containers/UserDetails';\nimport Message from './containers/Message';\n\nimport NavLayout from './layout/NavLayout';\n\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <NavLayout>\n            <Route exact path=\"/EBClient/\" component={Home} />\n            <Route path=\"/EBClient/Register\" component={Register} />\n            <Route path=\"/EBClient/Login\" component={Login} />\n            <Route path=\"/EBClient/Book/:id\" component={BookDetails} />\n            <Route path=\"/EBClient/Library/:id\" component={Library} />\n            <Route path=\"/EBClient/User/:id\" component={UserDetails} />\n            <Route path=\"/EBClient/Message/:id\" component={Message} />\n          </NavLayout>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}